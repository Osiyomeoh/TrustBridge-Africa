/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TRUSTFaucet,
  TRUSTFaucetInterface,
} from "../../contracts/TRUSTFaucet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_trustToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "drainer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FaucetDrained",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "refiller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FaucetRefilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "TokensClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "COOLDOWN_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FAUCET_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_DAILY_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "canUserClaim",
    outputs: [
      {
        internalType: "bool",
        name: "canClaim",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "timeUntilNextClaim",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "availableAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "dailyAmountClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "dailyTotalClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "drainFaucet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getFaucetStatus",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dailyTotal",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isPaused",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserStatus",
    outputs: [
      {
        internalType: "uint256",
        name: "lastClaimTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dailyClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeUntilNextClaim",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastRequestTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "refillFaucet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "trustToken",
    outputs: [
      {
        internalType: "contract TrustToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0346100f557601f610ed138819003918201601f19168301916001600160401b038311848410176100fa578084926020946040528339810103126100f557516001600160a01b038116908190036100f55733156100df5760008054336001600160a01b0319821681178355604051939290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a360018055608052610dc09081610111823960805181818161029e015281816102f9015281816103e801528181610501015281816107d90152610b8c0152f35b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b60003560e01c908163394f618114610cac5750806339cdf4ed14610af75780633f4ba83a14610a8e57806348c54b9d146107485780635c975abb146107255780636e99d52f14610707578063715018a6146106ae578063766976401461068a5780638456cb59146106305780638911fb24146105f25780638da5cb5b146105c95780639cd3348e146104c1578063a6e340c6146103a2578063bfc45642146102cd578063d13deb2f14610288578063ea0d5dcd146101d3578063eb207cd9146101ae578063f2fde38b146101215763f8e879c1146100f057600080fd5b3461011c57602036600319011261011c5760043560005260056020526020604060002054604051908152f35b600080fd5b3461011c57602036600319011261011c576004356001600160a01b0381169081900361011c5761014f610d44565b801561019857600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b3461011c57600036600319011261011c57602060405169010f0cf064dd592000008152f35b3461011c57602036600319011261011c576004356001600160a01b0381169081900361011c57600081815260036020818152604080842054600483529320549190529162015180820180831161027257421061024357506060916000905b60405192835260208301526040820152f35b6000526003602052604060002054916201518083018093116102725761026c6060934290610d1f565b90610231565b634e487b7160e01b600052601160045260246000fd5b3461011c57600036600319011261011c576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b3461011c57600036600319011261011c576040516370a0823160e01b81523060048201526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa801561039657600090610363575b606090620151804204600052600560205260406000205460ff6002541690604051928352602083015215156040820152f35b506020813d60201161038e575b8161037d60209383610ce7565b8101031261011c5760609051610331565b3d9150610370565b6040513d6000823e3d90fd5b3461011c57602036600319011261011c576004356103be610d44565b6040516323b872dd60e01b81523360048201523060248201526044810182905260208160648160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af190811561039657600091610492575b5015610455576040519081527f8a609374befb6b58cb150d9bd9aafa56b72315f38a284e3c21c69827fe7102b960203392a2005b60405162461bcd60e51b815260206004820152601560248201527411985d58d95d0e881499599a5b1b0819985a5b1959605a1b6044820152606490fd5b6104b4915060203d6020116104ba575b6104ac8183610ce7565b810190610d2c565b82610421565b503d6104a2565b3461011c57602036600319011261011c576004356104dd610d44565b60405163a9059cbb60e01b81523360048201526024810182905260208160448160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1908115610396576000916105aa575b501561056e576040519081527f58b0a3f82c9b7cc1e3147e1d85a196411c2b6dc1c29e1f5b36b986ce2280911560203392a2005b60405162461bcd60e51b815260206004820152601460248201527311985d58d95d0e88111c985a5b8819985a5b195960621b6044820152606490fd5b6105c3915060203d6020116104ba576104ac8183610ce7565b8261053a565b3461011c57600036600319011261011c576000546040516001600160a01b039091168152602090f35b3461011c57602036600319011261011c576004356001600160a01b0381169081900361011c5760005260046020526020604060002054604051908152f35b3461011c57600036600319011261011c57610649610d44565b610651610d6d565b600160ff1960025416176002557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b3461011c57600036600319011261011c576020604051683635c9adc5dea000008152f35b3461011c57600036600319011261011c576106c7610d44565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461011c57600036600319011261011c576020604051620151808152f35b3461011c57600036600319011261011c57602060ff600254166040519015158152f35b3461011c57600036600319011261011c57600260015414610a7d576002600155610770610d6d565b336000526003602052604060002054620151808101809111610272574210610a3857336000526004602052604060002054683635c9adc5dea0000081018091116102725769010f0cf064dd59200000106109f3576040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690602081602481855afa8015610396576000906109b8575b683635c9adc5dea0000091501061097357336000526003602052426040600020553360005260046020526040600020805490683635c9adc5dea000008201809211610272575562015180420460005260056020526040600020805491683635c9adc5dea000008301809311610272576000926020925560446040518094819363a9059cbb60e01b8352336004840152683635c9adc5dea0000060248401525af190811561039657600091610954575b501561090f57604051683635c9adc5dea0000081524260208201527f9923b4306c6c030f2bdfbf156517d5983b87e15b96176da122cd4f2effa4ba7b60403392a260018055005b60405162461bcd60e51b815260206004820152601760248201527f4661756365743a205472616e73666572206661696c65640000000000000000006044820152606490fd5b61096d915060203d6020116104ba576104ac8183610ce7565b816108c8565b60405162461bcd60e51b815260206004820152601b60248201527f4661756365743a20496e73756666696369656e7420746f6b656e7300000000006044820152606490fd5b506020813d6020116109eb575b816109d260209383610ce7565b8101031261011c57683635c9adc5dea000009051610819565b3d91506109c5565b60405162461bcd60e51b815260206004820152601c60248201527f4661756365743a204461696c79206c696d6974206578636565646564000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f4661756365743a20436f6f6c646f776e20706572696f64206e6f74206d6574006044820152606490fd5b633ee5aeb560e01b60005260046000fd5b3461011c57600036600319011261011c57610aa7610d44565b60025460ff811615610ae65760ff19166002557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b638dfc202b60e01b60005260046000fd5b3461011c57602036600319011261011c576004356001600160a01b0381169081900361011c57600081815260036020526040812054620151808101809111610c985742109182159181815260046020526040812054683635c9adc5dea000008101809111610c98576040516370a0823160e01b815230600482015269010f0cf064dd59200000919091101594906020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115610c8d578391610c57575b5084610c4f575b84610c3b575b5015610c30575060005260036020526040600020549162015180830180931161027257610c016060934290610d1f565b905b15610c2857683635c9adc5dea00000905b604051921515835260208301526040820152f35b600090610c14565b606093915090610c03565b683635c9adc5dea000001115935085610bd1565b859450610bcb565b90506020813d602011610c85575b81610c7260209383610ce7565b81010312610c81575186610bc4565b8280fd5b3d9150610c65565b6040513d85823e3d90fd5b634e487b7160e01b82526011600452602482fd5b3461011c57602036600319011261011c576004356001600160a01b038116919082900361011c57602091600052600382526040600020548152f35b90601f8019910116810190811067ffffffffffffffff821117610d0957604052565b634e487b7160e01b600052604160045260246000fd5b9190820391821161027257565b9081602091031261011c5751801515810361011c5790565b6000546001600160a01b03163303610d5857565b63118cdaa760e01b6000523360045260246000fd5b60ff60025416610d7957565b63d93c066560e01b60005260046000fdfea26469706673582212204bba7cf27a8c02e4315425b5c6ff12c860db7d4bb583712fc247e57b0164b4c964736f6c634300081c0033";

type TRUSTFaucetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TRUSTFaucetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TRUSTFaucet__factory extends ContractFactory {
  constructor(...args: TRUSTFaucetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _trustToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_trustToken, overrides || {});
  }
  override deploy(
    _trustToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_trustToken, overrides || {}) as Promise<
      TRUSTFaucet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TRUSTFaucet__factory {
    return super.connect(runner) as TRUSTFaucet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TRUSTFaucetInterface {
    return new Interface(_abi) as TRUSTFaucetInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TRUSTFaucet {
    return new Contract(address, _abi, runner) as unknown as TRUSTFaucet;
  }
}
