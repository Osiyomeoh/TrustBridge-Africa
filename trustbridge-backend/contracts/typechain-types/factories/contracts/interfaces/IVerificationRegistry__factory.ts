/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IVerificationRegistry,
  IVerificationRegistryInterface,
} from "../../../contracts/interfaces/IVerificationRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assetId",
        type: "bytes32",
      },
    ],
    name: "getVerificationStatus",
    outputs: [
      {
        internalType: "bool",
        name: "verified",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "score",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiresAt",
        type: "uint256",
      },
      {
        internalType: "enum IVerificationRegistry.VerificationStatus",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assetId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "attestor",
        type: "address",
      },
    ],
    name: "hasAttestorSigned",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assetId",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "reviewVerification",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assetId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "revokeVerification",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "assetId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "assetType",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "score",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "evidenceRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "expiresAt",
        type: "uint256",
      },
      {
        internalType: "bytes[]",
        name: "attestorSigs",
        type: "bytes[]",
      },
      {
        internalType: "address[]",
        name: "signingAttestors",
        type: "address[]",
      },
    ],
    name: "submitVerification",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IVerificationRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): IVerificationRegistryInterface {
    return new Interface(_abi) as IVerificationRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IVerificationRegistry {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IVerificationRegistry;
  }
}
