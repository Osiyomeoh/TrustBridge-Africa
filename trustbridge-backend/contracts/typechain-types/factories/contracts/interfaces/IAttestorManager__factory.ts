/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IAttestorManager,
  IAttestorManagerInterface,
} from "../../../contracts/interfaces/IAttestorManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "attestor",
        type: "address",
      },
    ],
    name: "getAttestorInfo",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "stakeAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "reputationScore",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "organizationType",
            type: "string",
          },
          {
            internalType: "string",
            name: "country",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "totalAttestations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "correctAttestations",
            type: "uint256",
          },
        ],
        internalType: "struct IAttestorManager.AttestorInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "attestor",
        type: "address",
      },
    ],
    name: "incrementAttestationCount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "attestor",
        type: "address",
      },
    ],
    name: "isAttestorActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "attestor",
        type: "address",
      },
      {
        internalType: "string",
        name: "organizationType",
        type: "string",
      },
      {
        internalType: "string",
        name: "country",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "initialStake",
        type: "uint256",
      },
    ],
    name: "registerAttestor",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "attestor",
        type: "address",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "slashAttestor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "attestor",
        type: "address",
      },
      {
        internalType: "bool",
        name: "wasCorrect",
        type: "bool",
      },
    ],
    name: "updateAttestorReputation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IAttestorManager__factory {
  static readonly abi = _abi;
  static createInterface(): IAttestorManagerInterface {
    return new Interface(_abi) as IAttestorManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IAttestorManager {
    return new Contract(address, _abi, runner) as unknown as IAttestorManager;
  }
}
