/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IPoolFactory,
  IPoolFactoryInterface,
} from "../../../contracts/interfaces/IPoolFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "InvestorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "manager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "dropTokenContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tinTokenContract",
        type: "address",
      },
    ],
    name: "PoolCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "finalValue",
        type: "uint256",
      },
    ],
    name: "PoolMatured",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "oldStatus",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "PoolStatusUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "investor",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addInvestor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "strategy",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "dropTokenSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tinTokenSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "targetAPY",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "riskLevel",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "minimumInvestment",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maximumInvestment",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockupPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maturityDate",
        type: "uint256",
      },
    ],
    name: "createPool",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "distributeRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
    ],
    name: "getPool",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "poolId",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "manager",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "strategy",
            type: "string",
          },
          {
            internalType: "address[]",
            name: "assets",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "totalValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dropTokenSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tinTokenSupply",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dropTokenPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tinTokenPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "targetAPY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "actualAPY",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "riskLevel",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "minimumInvestment",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maximumInvestment",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lockupPeriod",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maturityDate",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "dropTokenContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "tinTokenContract",
            type: "address",
          },
          {
            internalType: "address",
            name: "poolContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "totalInvestors",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalInvested",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
        ],
        internalType: "struct IPoolFactory.Pool",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
    ],
    name: "getPoolInvestors",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "investor",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "dropTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tinTokens",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalInvested",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entryDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastUpdate",
            type: "uint256",
          },
        ],
        internalType: "struct IPoolFactory.Investor[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
    ],
    name: "getPoolPerformance",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalReturn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "monthlyReturn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "volatility",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sharpeRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxDrawdown",
            type: "uint256",
          },
        ],
        internalType: "struct IPoolFactory.PerformanceMetrics",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
    ],
    name: "maturePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "investor",
        type: "address",
      },
    ],
    name: "removeInvestor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "newStatus",
        type: "uint8",
      },
    ],
    name: "updatePoolStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IPoolFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IPoolFactoryInterface {
    return new Interface(_abi) as IPoolFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IPoolFactory {
    return new Contract(address, _abi, runner) as unknown as IPoolFactory;
  }
}
